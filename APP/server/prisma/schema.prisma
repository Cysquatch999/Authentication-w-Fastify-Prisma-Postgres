generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(100)
  email            String             @unique @db.VarChar(150)
  password         String             @db.VarChar(256)
  creationAt       DateTime           @default(now()) @db.Timestamptz(6)
  isVerified       Boolean            @default(false)
  isAdmin          Boolean            @default(false)
  change_email     change_email[]
  contact_messages contact_messages[]
  reset_password   reset_password[]
  verify_account   verify_account[]
}

model reset_password {
  id          Int      @id @default(autoincrement())
  userID      Int
  resetCode   String   @db.VarChar(256)
  isActive    Boolean  @default(true)
  isUsed      Boolean  @default(false)
  expiredTime DateTime @default(now()) @db.Timestamptz(6)
  users       users    @relation(fields: [userID], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_id_to_reset_password_userID")

  @@index([userID], map: "fki_userID_to_reset_password")
}

model verify_account {
  id          Int      @id @default(autoincrement())
  userID      Int
  expiredTime DateTime @default(now()) @db.Timestamptz(6)
  isUsed      Boolean  @default(false)
  isActive    Boolean  @default(true)
  verifyCode  String   @db.VarChar(256)
  users       users    @relation(fields: [userID], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_id_to_verify_account_userID")

  @@index([userID], map: "fki_users_id_to_verify_account_userID")
  @@index([userID], map: "fki_b")
}

model contact_messages {
  id       Int     @id @default(autoincrement())
  userID   Int
  location String  @db.VarChar(100)
  message  String  @db.VarChar(3000)
  isRead   Boolean @default(false)
  issue    String  @db.VarChar(100)
  phone    String  @db.VarChar(15)
  users    users   @relation(fields: [userID], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_id_to_contact_messages_userID")

  @@index([userID], map: "fki_users_id_to_contact_messages_userID")
}

model change_email {
  id          Int      @id(map: "reset_email_pkey") @default(autoincrement())
  userID      Int
  emailCode   String   @db.VarChar(256)
  isActive    Boolean  @default(true)
  isUsed      Boolean  @default(false)
  expiredTime DateTime @default(now()) @db.Timestamptz(6)
  oldEmail    String   @db.VarChar(256)
  users       users    @relation(fields: [userID], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_id_to_reset_email_userID")

  @@index([userID], map: "fki_users_id_to_reset_email_userID")
}
